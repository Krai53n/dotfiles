#!/bin/python

# author: Krai53n
# date: 08.10.20

from pyfiglet import Figlet as fig
from time import sleep
import time
from os import system
from sys import platform as pl
from random import choice
from colorama import init
from colorama import Fore, Style
init()


### CONSTANTS
FONT = 'slant' # if you whant look all fonts: pyfilget --list-fonts
DATE_WITH_NEXT_YEAR = '01', '01' # 1 - month, 2 - day
DATE_DEADLINE = '2021-05-27' # year, month, day
DATE_WITH_NEXT_YEAR_OR_NOT = 0 # 1 - yes, 0 - no


### FUNCTIONS
def determine_event_date(date_with_next_year = DATE_WITH_NEXT_YEAR_OR_NOT):
    '''Function determine the date of New Year
    '''
    if date_with_next_year == 1:
        year = time.localtime(time.time())[0] + 1
        date_event = '{}-{}-{} 00:00:00'.format(year,
                                                DATE_WITH_NEXT_YEAR[0],
                                                DATE_WITH_NEXT_YEAR[1])
    else:
        date_event = DATE_DEADLINE + ' 00:00:00'
    return date_event

def count_start_of_epoch_to_event():
    '''Function count seconds with start of epoch
    till our date
    '''
    seconds = time.mktime(time.strptime(determine_event_date(),
                                        '%Y-%m-%d %H:%M:%S'))
    return seconds

def difference():
    '''Function count difference between
    seconds of new_year and seconds of our time
    '''
    our_time = time.time()
    epoch_to_event_sec = count_start_of_epoch_to_event()
    if epoch_to_event_sec > our_time:
        dif = epoch_to_event_sec - our_time
        return dif
    else:
        print('You paste not correct deadline\nPlease check it!'.upper())

def less(var):
    '''Function give 0 ifnumber less then 10
    for example we have '1" after this function
    we will have '01'
    argument of the function is number, for example '1'
    '''
    if var < 10:
        var = '0' + str(var)
    return var

def count():
    '''Function which count period of time till event
    '''
    seconds = difference()
    minutes = seconds // 60
    seconds = int(seconds % 60)
    hours = int(minutes // 60)
    minutes = int(minutes % 60)
    days = int(hours // 24)
    hours = int(hours % 24)
    days = less(days)
    hours = less(hours)
    minutes = less(minutes)
    seconds = less(seconds)
    time_to_event = {
        'days': days,
        'hours': hours,
        'minutes': minutes,
        'seconds': seconds,
    }
    return time_to_event
def display(text = 'New Year?', font = FONT):
    '''Function accept text(time) and font
    return string with ascii symbols
    '''
    custom_fig = fig(font = FONT)
    print(custom_fig.renderText(text), end = '')

def clear():
    '''Function clear what was before in
    terminal and aslo check our OS'''
    if pl == 'linux' or pl == 'linux2' or pl == 'darwin':
        system('clear')
    if pl == 'win32':
        system('clear')


if __name__ == '__main__':
    while 1:
        colors = ('RED', 'GREEN', 'YELLOW', 'BLUE',
                  'MAGENTA', 'CYAN', 'WHITE')
        clear()
        print(eval('Fore.{}'.format(choice(colors))), end = '')
        date = count()
        date = '{}:{}:{}:{}'.format(
            date['days'],
            date['hours'],
            date['minutes'],
            date['seconds']
        )
        display(date)
        sleep(1)
